<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<!-- 2018A7PS0209H - Jhaveri Aditya Alok - f20180209@hyderabad.bits-pilani.ac.in -->
<!-- 2018A7PS0195H - Arpan Sarangi - f20180195@hyderabad.bits-pilani.ac.in -->
<!-- 2018A7PS0191H - Ridhiman Agrawal - f20180191@hyderabad.bits-pilani.ac.in -->
<!-- 2018A7PS0267H - Divyanshu Agrawal - f20180267@hyderabad.bits-pilani.ac.in -->
<!-- 2018A7PS0146H - Dhiraaj Desai - f20180146@hyderabad.bits-pilani.ac.in -->

<Machine name="PartA.cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="addr" type="required" numBits="12" relativity="absolute" signed="false" defaultValue="0" id="model.Field134b300b">
	</Field>
	<Field name="unused" type="ignored" numBits="12" relativity="absolute" signed="false" defaultValue="0" id="model.Field68e3a20a">
	</Field>
	<Field name="op" type="required" numBits="4" relativity="absolute" signed="false" defaultValue="0" id="model.Field2096d59b">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="ACC" width="16" initialValue="0" readOnly="false" id="model.module.Register8700b3a" />
	<Register name="CPU" width="16" initialValue="0" readOnly="false" id="model.module.Register42f1b957" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register37f7a0f1" />
	<Register name="MAR" width="12" initialValue="0" readOnly="false" id="model.module.Register215b9199" />
	<Register name="MDR" width="16" initialValue="0" readOnly="false" id="model.module.Register297a7753" />
	<Register name="PC" width="12" initialValue="0" readOnly="false" id="model.module.Register660e582a" />
	<Register name="STATUS" width="8" initialValue="0" readOnly="false" id="model.module.Register6c749c32" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="CARRY-BIT" bit="1" register="model.module.Register6c749c32" halt="false" id="model.module.ConditionBit11de1f7c" />
	<ConditionBit name="HALT-BIT" bit="0" register="model.module.Register6c749c32" halt="true" id="model.module.ConditionBit6b6432fb" />
	<ConditionBit name="OVERFLOW-BIT" bit="2" register="model.module.Register6c749c32" halt="false" id="model.module.ConditionBit7f3ff8b5" />

	<!--............. rams ..........................-->
	<RAM name="RAM" length="256" cellSize="16" id="model.module.RAM37627e6c" />

	<!--............. set ...........................-->
	<!-- none -->

	<!--............. test ..........................-->
	<Test name="ACC!=0" register="model.module.Register8700b3a" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test56a6a203" />
	<Test name="ACC&lt;0" register="model.module.Register8700b3a" start="0" numBits="16" comparison="LT" value="0" omission="2" id="model.microinstruction.Test1c1fa1c6" />
	<Test name="ACC==0" register="model.module.Register8700b3a" start="0" numBits="16" comparison="EQ" value="0" omission="1" id="model.microinstruction.Test1ce518a0" />
	<Test name="ACC&gt;0" register="model.module.Register8700b3a" start="0" numBits="16" comparison="GT" value="0" omission="2" id="model.microinstruction.Test3850844e" />

	<!--............. increment .....................-->
	<Increment name="INC1-PC" register="model.module.Register660e582a" overflowBit="model.module.ConditionBit6b6432fb" delta="1" id="model.microinstruction.Increment5b059ffd" />

	<!--............. shift .........................-->
	<!-- none -->

	<!--............. logical .......................-->
	<!-- none -->

	<!--............. arithmetic ....................-->
	<Arithmetic name="ACC+MDR-&gt;ACC" type="ADD" source1="model.module.Register8700b3a" source2="model.module.Register297a7753" destination="model.module.Register8700b3a" overflowBit="model.module.ConditionBit6b6432fb" id="model.microinstruction.Arithmetic3a7514ca" />
	<Arithmetic name="ACC-MDR-&gt;ACC" type="SUBTRACT" source1="model.module.Register8700b3a" source2="model.module.Register297a7753" destination="model.module.Register8700b3a" overflowBit="model.module.ConditionBit6b6432fb" id="model.microinstruction.Arithmeticee12b3c" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="ACC-MDR" source="model.module.Register8700b3a" srcStartBit="0" dest="model.module.Register297a7753" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR32afbc5a" />
	<TransferRtoR name="CPU(4-15)-&gt;PC" source="model.module.Register42f1b957" srcStartBit="4" dest="model.module.Register8700b3a" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR34f1fbe1" />
	<TransferRtoR name="CPU-&gt;ACC" source="model.module.Register42f1b957" srcStartBit="0" dest="model.module.Register8700b3a" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR52cc798e" />
	<TransferRtoR name="IR(4-15)-&gt;MAR" source="model.module.Register37f7a0f1" srcStartBit="4" dest="model.module.Register215b9199" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR45222785" />
	<TransferRtoR name="IR(4-15)-&gt;PC" source="model.module.Register37f7a0f1" srcStartBit="4" dest="model.module.Register660e582a" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR5763a8af" />
	<TransferRtoR name="MDR(4-15)-&gt;MAR" source="model.module.Register297a7753" srcStartBit="4" dest="model.module.Register215b9199" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR505cd1b4" />
	<TransferRtoR name="MDR-&gt;ACC" source="model.module.Register297a7753" srcStartBit="0" dest="model.module.Register8700b3a" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR1fdeea89" />
	<TransferRtoR name="MDR-&gt;IP" source="model.module.Register297a7753" srcStartBit="0" dest="model.module.Register37f7a0f1" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR4b14f8f8" />
	<TransferRtoR name="PC-&gt;MAR" source="model.module.Register660e582a" srcStartBit="0" dest="model.module.Register215b9199" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR17817e5" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="DECODE-IR" ir="model.module.Register37f7a0f1" id="model.microinstruction.Decode379fa70f" />

	<!--............. set condition bit .............-->
	<SetCondBit name="SET-HALT-BIT" bit="model.module.ConditionBit6b6432fb" value="1" id="model.microinstruction.SetCondBit5ffd99d7" />

	<!--............. io ............................-->
	<IO name="ACC-&gt;OUT" direction="output" type="integer" buffer="model.module.Register8700b3a" connection="[Console]" id="model.microinstruction.IO334279e8" />
	<IO name="IN-&gt;ACC" direction="input" type="integer" buffer="model.module.Register8700b3a" connection="[Console]" id="model.microinstruction.IO72c4875a" />

	<!--............. memory access .................-->
	<MemoryAccess name="MDR-&gt;RAM[MAR]" direction="write" memory="model.module.RAM37627e6c" data="model.module.Register297a7753" address="model.module.Register215b9199" id="model.microinstruction.MemoryAccess3829f1d2" />
	<MemoryAccess name="RAM[MAR]-&gt;MDR" direction="read" memory="model.module.RAM37627e6c" data="model.module.Register297a7753" address="model.module.Register215b9199" id="model.microinstruction.MemoryAccessba9e421" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End2b044185" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR17817e5" />
		<Microinstruction microRef="model.microinstruction.MemoryAccessba9e421" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4b14f8f8" />
		<Microinstruction microRef="model.microinstruction.Increment5b059ffd" />
		<Microinstruction microRef="model.microinstruction.Decode379fa70f" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="M2M" opcode="c" instructionFormat="op addr" assemblyFormat="op addr" instructionColors="#8ab0a0 #c189bb" assemblyColors="#8ab0a0 #c189bb" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR45222785" />
		<Microinstruction microRef="model.microinstruction.MemoryAccessba9e421" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR505cd1b4" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR32afbc5a" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess3829f1d2" />
		<Microinstruction microRef="model.microinstruction.End2b044185" />
	</MachineInstruction>

	<MachineInstruction name="M2A" opcode="8" instructionFormat="op addr" assemblyFormat="op addr" instructionColors="#aca093 #86bac5" assemblyColors="#aca093 #86bac5" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR45222785" />
		<Microinstruction microRef="model.microinstruction.MemoryAccessba9e421" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR505cd1b4" />
		<Microinstruction microRef="model.microinstruction.MemoryAccessba9e421" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR1fdeea89" />
		<Microinstruction microRef="model.microinstruction.End2b044185" />
	</MachineInstruction>

	<MachineInstruction name="JMPNZ" opcode="7" instructionFormat="op addr" assemblyFormat="op addr" instructionColors="#cdaff6 #969ea2" assemblyColors="#cdaff6 #969ea2" >
		<Microinstruction microRef="model.microinstruction.Test1ce518a0" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5763a8af" />
		<Microinstruction microRef="model.microinstruction.End2b044185" />
	</MachineInstruction>

	<MachineInstruction name="JMPP" opcode="e" instructionFormat="op addr" assemblyFormat="op addr" instructionColors="#a7c4f4 #edf19a" assemblyColors="#a7c4f4 #edf19a" >
		<Microinstruction microRef="model.microinstruction.Test1c1fa1c6" />
		<Microinstruction microRef="model.microinstruction.Test1ce518a0" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5763a8af" />
		<Microinstruction microRef="model.microinstruction.End2b044185" />
	</MachineInstruction>

	<MachineInstruction name="STOP" opcode="0" instructionFormat="op unused" assemblyFormat="op" instructionColors="#9ce5f7 #83bb83" assemblyColors="#9ce5f7" >
		<Microinstruction microRef="model.microinstruction.SetCondBit5ffd99d7" />
		<Microinstruction microRef="model.microinstruction.End2b044185" />
	</MachineInstruction>

	<MachineInstruction name="LDA" opcode="1" instructionFormat="op addr" assemblyFormat="op addr" instructionColors="#acd0a5 #b68699" assemblyColors="#acd0a5 #b68699" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR45222785" />
		<Microinstruction microRef="model.microinstruction.MemoryAccessba9e421" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR1fdeea89" />
		<Microinstruction microRef="model.microinstruction.End2b044185" />
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="2" instructionFormat="op addr" assemblyFormat="op addr" instructionColors="#e2c8c7 #d0ddda" assemblyColors="#e2c8c7 #d0ddda" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR45222785" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR32afbc5a" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess3829f1d2" />
		<Microinstruction microRef="model.microinstruction.End2b044185" />
	</MachineInstruction>

	<MachineInstruction name="IPA" opcode="3" instructionFormat="op unused" assemblyFormat="op" instructionColors="#ae92d7 #c2c3b1" assemblyColors="#ae92d7" >
		<Microinstruction microRef="model.microinstruction.IO72c4875a" />
		<Microinstruction microRef="model.microinstruction.End2b044185" />
	</MachineInstruction>

	<MachineInstruction name="OPA" opcode="4" instructionFormat="op unused" assemblyFormat="op" instructionColors="#dfcec3 #9e9aea" assemblyColors="#dfcec3" >
		<Microinstruction microRef="model.microinstruction.IO334279e8" />
		<Microinstruction microRef="model.microinstruction.End2b044185" />
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="5" instructionFormat="op addr" assemblyFormat="op addr" instructionColors="#d484c0 #a394f8" assemblyColors="#d484c0 #a394f8" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR45222785" />
		<Microinstruction microRef="model.microinstruction.MemoryAccessba9e421" />
		<Microinstruction microRef="model.microinstruction.Arithmetic3a7514ca" />
		<Microinstruction microRef="model.microinstruction.End2b044185" />
	</MachineInstruction>

	<MachineInstruction name="SUB" opcode="6" instructionFormat="op addr" assemblyFormat="op addr" instructionColors="#83b9ef #dec5cc" assemblyColors="#83b9ef #dec5cc" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR45222785" />
		<Microinstruction microRef="model.microinstruction.MemoryAccessba9e421" />
		<Microinstruction microRef="model.microinstruction.Arithmeticee12b3c" />
		<Microinstruction microRef="model.microinstruction.End2b044185" />
	</MachineInstruction>

	<MachineInstruction name="JMP" opcode="9" instructionFormat="op addr" assemblyFormat="op addr" instructionColors="#e4c4b9 #f6f3c3" assemblyColors="#e4c4b9 #f6f3c3" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR5763a8af" />
		<Microinstruction microRef="model.microinstruction.End2b044185" />
	</MachineInstruction>

	<MachineInstruction name="JMPZ" opcode="a" instructionFormat="op addr" assemblyFormat="op addr" instructionColors="#b8feb9 #e4acf8" assemblyColors="#b8feb9 #e4acf8" >
		<Microinstruction microRef="model.microinstruction.Test56a6a203" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5763a8af" />
		<Microinstruction microRef="model.microinstruction.End2b044185" />
	</MachineInstruction>

	<MachineInstruction name="JMPN" opcode="b" instructionFormat="op addr" assemblyFormat="op addr" instructionColors="#f6ecd4 #cd87c3" assemblyColors="#f6ecd4 #cd87c3" >
		<Microinstruction microRef="model.microinstruction.Test3850844e" />
		<Microinstruction microRef="model.microinstruction.Test1ce518a0" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5763a8af" />
		<Microinstruction microRef="model.microinstruction.End2b044185" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
		<RegisterRAMPair register="model.module.Register660e582a" ram="model.module.RAM37627e6c" dynamic="false" />
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM37627e6c" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="false" />

	<!--............. program counter info ..................-->

</Machine>
